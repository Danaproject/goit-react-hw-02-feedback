{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Container/Container.module.css","components/Panel/Panel.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbsckButton.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/StatItems.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/Container/Container.jsx","components/Panel/Panel.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","FeedbackButton","options","onLeaveFeedback","Object","keys","map","id","data-id","onClick","button","FeedbackOptions","StatItems","value","Statistics","total","positivePercentage","statistics","Notification","message","Container","Panel","App","state","good","neutral","bad","handleFeedback","e","setState","prevState","target","dataset","countTotalFeedback","values","reduce","accumulator","currentValue","countPositiveFeedbackPercentage","isNaN","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.394a3cd5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"value\":\"Statistics_value__2eXJD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackOptions\":\"FeedbackOptions_FeedbackOptions__3lEEq\",\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\",\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__2vzo1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3tQ9A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Panel\":\"Panel_Panel__3MTlv\"};","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n    <section className={styles.section}>\n        <h1 className={styles.title}>{title}</h1>\n        {children}\n    </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;","import styles from './FeedbackOptions.module.css';\n\nconst FeedbackButton = ({ options, onLeaveFeedback }) => {\n  return (\n      Object.keys(options).map(id => (\n        (<li key={id}><button data-id={id} onClick={onLeaveFeedback} className={styles.button}>{id}</button></li>)\n      ))\n    );\n  }\n\nexport default FeedbackButton;","import FeedbackButton from './FeedbsckButton';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({options, onLeaveFeedback}) => {\n  return (\n    <ul className={styles.FeedbackOptions}>\n      <FeedbackButton options={options} onLeaveFeedback={onLeaveFeedback} />\n    </ul>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    }).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;","import styles from './Statistics.module.css';\n\nconst StatItems = ({ options }) => (\n    Object.keys(options).map(id => (\n       (<li key={id} className={styles.value}>{id}: {options[id]}</li>)\n    ))\n)\nexport default StatItems;","import StatItems from './StatItems';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ options, total, positivePercentage }) => {\n    return (\n        <ul className={styles.statistics}>\n            <StatItems options={options} />\n            <li className={styles.value}>Total: {total}</li>\n            <li className={styles.value}>Positive feedback: {positivePercentage}%</li>\n        </ul>\n    );\n}\n  \nStatistics.propTypes = {\n    options: PropTypes.shape({\n        good: PropTypes.number.isRequired,\n        neutral: PropTypes.number.isRequired,\n        bad: PropTypes.number.isRequired,\n        }).isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;","import styles from './Notification.module.css';\n\nconst Notification = ({ message }) => <p className={styles.Notification}>{message}</p>;\n\nexport default Notification;","import styles from './Container.module.css';\n\nconst Container = ({ children }) => <div className={styles.Container}>{children}</div>;\n\nexport default Container;","import styles from './Panel.module.css';\n\nconst Panel = ({ children }) => <div className={styles.Panel}>{children}</div>;\n\nexport default Panel;","import { Component } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\nimport Container from './components/Container/Container';\nimport Panel from './components/Panel';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = (e) => {\n    this.setState(prevState => ({\n      [e.target.dataset.id]: prevState[e.target.dataset.id]+1\n    }));\n  }\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((accumulator, currentValue) => accumulator + currentValue);\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return isNaN(good / this.countTotalFeedback()) ? 0 : Math.round((good / this.countTotalFeedback()) * 100)\n  }\n\n  render() {\n    const countTotalFeedback = this.countTotalFeedback();\n    const countPositiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <Container>\n        <Panel>\n          <Section title=\"Please leave feedback\">\n            <FeedbackOptions options={this.state} onLeaveFeedback={this.handleFeedback} />\n          </Section>\n    \n          <Section title=\"Statistics\">\n            {countTotalFeedback\n              ? <Statistics options={this.state} total={countTotalFeedback} positivePercentage={countPositiveFeedbackPercentage} />\n              : <Notification message=\"No feedback given\" />}\n          </Section>\n        </Panel>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.module.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}